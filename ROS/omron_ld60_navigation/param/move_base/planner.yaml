recovery_behaviour_enabled: true

# shutdown_costmaps: false
controller_frequency: 5.0 # controller_frequency: The frequency of sending commands to the chassis control movement topic cmd_vel.
# controller_patience: 3.0 # controller_patience: How long does it take for the controller to wait for effective control to be issued before the space cleanup operation is executed.
# planner_frequency: 0.0 # planner_frequency: The execution frequency of the global planning operation. If set to 0.0, the global planner only Re-executes the planning operation when a new target point is received or the local planner reports that the path is blocked.
# planner_patience: 5.0 # planner_patience: How long is left for the planner to find a valid plan before the space cleanup operation is executed.

# NavfnROS:
#   allow_unknown: true # Specifies whether or not to allow navfn to create plans that traverse unknown space.
#   default_tolerance: 0.1 # A tolerance on the goal point for the planner.
#   cost_factor: 0.55
#   neutral_cost: 66
#   lethal_cost: 253

global_planner:

  #default
  allow_unknown: true
  use_dijkstra: true
  use_quadratic: true
  use_grid_path: false
  old_navfn_behavior: false

  #changable
  visualize_potential: true
  publish_potential: true
  cost_factor: 0.55
  neutral_cost: 66
  lethal_cost: 253

DWAPlannerROS:

  global_frame_id: odom # same as local costmap

  # Robot configuration parameters
  holonomic_robot: false

  acc_lim_x: 2.5
  acc_lim_theta: 8.0

  max_vel_x: 2.5
  min_vel_x: -0.1 # The minimum forward velocity allowed for the base in meters/sec. It is useful to specify this to guarantee that velocity commands sent to a mobile base are high enough to allow the base to overcome friction. 

  max_vel_theta: 4.0
  min_vel_theta: -4.0
  max_in_place_vel_theta: 3
  
  escape_vel: -2

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.05
  xy_goal_tolerance: 0.2
  latch_xy_goal_tolerance: true #If goal tolerance is latched, if the robot ever reaches the goal xy location it will simply rotate in place, even if it ends up outside the goal tolerance while it is doing so.

  # # Forward Simulation Parameters
  sim_time: 4.0
  sim_granularity: 0.075
  vx_samples: 20
  vy_samples: 0
  vtheta_samples: 40
  # penalize_negative_x: true

  # # Trajectory scoring parameters
  path_distance_bias: 20.0 # The weighting for how much the controller should stay close to the path it was given
  goal_distance_bias: 10.0 # The weighting for how much the controller should attempt to reach its local goal, also controls speed
  occdist_scale: 0.1 # The weighting for how much the controller should attempt to avoid obstacles

  stop_time_buffer: 0.2  # The amount of time that the robot must stThe absolute value of the veolicty at which to start scaling the robot's footprint, in m/sop before a collision in order for a trajectory to be considered valid in seconds
  scaling_speed: 0.25 # The absolute value of the veolicty at which to start scaling the robot's footprint, in m/s
  max_scaling_factor: 0.2 # The maximum factor to scale the robot's footprint by

  # # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)